#+TITLE: Отчёт по лабораторной работе №8
#+SUBTITLE: Артём Абрамян, 382007-1
#+AUTHOR: Артём Абрамян
#+LANGUAGE: ru
#+OPTIONS: toc:nil author:nil date:nil timestamp:nil
#+HTML_HEAD: <style>:root{ font-family: "IBM Plex Sans"; line-height: 1.5;} pre{font-family: "Iosevka";font-size:13px;} .src{ background-color: #3c3c3c; color: white }</style>

* Блок-схема алгоритма

#+ATTR_HTML: :width 60%
[[./flowchart.png]]

* Задача 5 предметов

| Номер | Ценность | Вес |
|-------+----------+-----|
|     0 |        7 |   4 |
|     1 |        5 |   2 |
|     2 |        3 |   1 |
|     3 |        6 |   5 |
|     4 |        2 |   1 |

Вместительность рюкзака: 10.

** Запуск

#+BEGIN_src
> Итерация №1 | Текущий набор: [0 0 0 0 0]
              | Вес/вместимость: 0/10
> Наиболее ценный предмет: (Value: 3, Weight: 1, Specific Value: 3), №2
> Можем положить в ранец. Тогда 1/10

> Итерация №2 | Текущий набор: [0 0 1 0 0]
              | Вес/вместимость: 1/10
> Наиболее ценный предмет: (Value: 5, Weight: 2, Specific Value: 2,5), №1
> Можем положить в ранец. Тогда 3/10

> Итерация №3 | Текущий набор: [0 1 1 0 0]
              | Вес/вместимость: 3/10
> Наиболее ценный предмет: (Value: 2, Weight: 1, Specific Value: 2), №4
> Можем положить в ранец. Тогда 4/10

> Итерация №4 | Текущий набор: [0 1 1 0 1]
              | Вес/вместимость: 4/10
> Наиболее ценный предмет: (Value: 7, Weight: 4, Specific Value: 1,75), №0
> Можем положить в ранец. Тогда 8/10

> Итерация №5 | Текущий набор: [1 1 1 0 1]
              | Вес/вместимость: 8/10
> Наиболее ценный предмет: (Value: 6, Weight: 5, Specific Value: 1,2), №3
> Не можем положить в ранец

Решение: [1 1 1 0 1], ценность: 17
#+END_src

* Задача 15 предметов

| Номер | Ценность | Вес |
|-------+----------+-----|
|     0 |        7 |   4 |
|     1 |        5 |   2 |
|     2 |        3 |   1 |
|     3 |        6 |   5 |
|     4 |        2 |   1 |
|     5 |        1 |   2 |
|     6 |        4 |   3 |
|     7 |        8 |   6 |
|     8 |        3 |   2 |
|     9 |        2 |   3 |
|    10 |       10 |   7 |
|    11 |        9 |   9 |
|    12 |        6 |   6 |
|    13 |        3 |   5 |
|    14 |        5 |   4 |

Вместительность рюкзака: 30.

** Запуск

#+BEGIN_src
> Итерация №1 | Текущий набор: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
              | Вес/вместимость: 0/30
> Наиболее ценный предмет: (Value: 3, Weight: 1, Specific Value: 3), №2
> Можем положить в ранец. Тогда 1/30

> Итерация №2 | Текущий набор: [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
              | Вес/вместимость: 1/30
> Наиболее ценный предмет: (Value: 5, Weight: 2, Specific Value: 2,5), №1
> Можем положить в ранец. Тогда 3/30

> Итерация №3 | Текущий набор: [0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
              | Вес/вместимость: 3/30
> Наиболее ценный предмет: (Value: 2, Weight: 1, Specific Value: 2), №4
> Можем положить в ранец. Тогда 4/30

> Итерация №4 | Текущий набор: [0 1 1 0 1 0 0 0 0 0 0 0 0 0 0]
              | Вес/вместимость: 4/30
> Наиболее ценный предмет: (Value: 7, Weight: 4, Specific Value: 1,75), №0
> Можем положить в ранец. Тогда 8/30

> Итерация №5 | Текущий набор: [1 1 1 0 1 0 0 0 0 0 0 0 0 0 0]
              | Вес/вместимость: 8/30
> Наиболее ценный предмет: (Value: 3, Weight: 2, Specific Value: 1,5), №8
> Можем положить в ранец. Тогда 10/30

> Итерация №6 | Текущий набор: [1 1 1 0 1 0 0 0 1 0 0 0 0 0 0]
              | Вес/вместимость: 10/30
> Наиболее ценный предмет: (Value: 10, Weight: 7, Specific Value: 1,4285714285714286), №10
> Можем положить в ранец. Тогда 17/30

> Итерация №7 | Текущий набор: [1 1 1 0 1 0 0 0 1 0 1 0 0 0 0]
              | Вес/вместимость: 17/30
> Наиболее ценный предмет: (Value: 4, Weight: 3, Specific Value: 1,3333333333333333), №6
> Можем положить в ранец. Тогда 20/30

> Итерация №8 | Текущий набор: [1 1 1 0 1 0 1 0 1 0 1 0 0 0 0]
              | Вес/вместимость: 20/30
> Наиболее ценный предмет: (Value: 8, Weight: 6, Specific Value: 1,3333333333333333), №7
> Можем положить в ранец. Тогда 26/30

> Итерация №9 | Текущий набор: [1 1 1 0 1 0 1 1 1 0 1 0 0 0 0]
              | Вес/вместимость: 26/30
> Наиболее ценный предмет: (Value: 5, Weight: 4, Specific Value: 1,25), №14
> Можем положить в ранец. Тогда 30/30

Решение: [1 1 1 0 1 0 1 1 1 0 1 0 0 0 1], ценность: 47
#+END_src

* Выводы

Алгоритм Данцига, так как учитывает вес предмета при выборе "самого ценного",
работает лучше, чем сравнение предметов по стоимости $c_i$. Так, в случае задачи с
пятнадцатью предметами, жадный алгоритм Данцига находит решение с ценностью 47, а
жадный алгоритм, находящий лучший предмет по стоимости --- 34.

* Исходный код

Программа написана на C# 10 (.NET 6).

** Item.cs

Задаёт структуру для хранения информации о предмете.

#+INCLUDE: "../Item.cs" src csharp

** GreedyMethod.cs

Реализует жадный алгоритм (Данцига) решения ЗоР.

#+INCLUDE: "../GreedyMethod.cs" src csharp

** Program.cs

#+INCLUDE: "../Program.cs" src csharp
